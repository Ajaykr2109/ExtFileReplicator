name: Extended Folder Replicator

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install .

      - name: Set up test folders
        run: |
          mkdir -p test_src test_dest
          echo "Hello, world!" > test_src/testfile.txt
        shell: bash

      - name: Run `frep sync`
        run: |
          frep sync --source test_src --dest test_dest --dry-run

      - name: Validate file replication
        run: |
          frep sync --source test_src --dest test_dest
          if [ ! -f "test_dest/testfile.txt" ]; then
            echo "Error: File not copied!"
            exit 1
          fi
        shell: bash
        if: runner.os != 'Windows'

      - name: Run `frep watch` (background)
        run: |
          frep watch --source test_src --dest test_dest --interval 1 &
          sleep 5
          pkill -f "frep watch" || echo "No process found"
        shell: bash
        if: runner.os != 'Windows'

      - name: Set up test folders (Windows)
        run: |
          mkdir test_src
          mkdir test_dest
          Set-Content -Path "test_src\testfile.txt" -Value "Hello, world!"
        shell: pwsh
        if: runner.os == 'Windows'

      - name: Run `frep sync` (Windows)
        run: |
          frep sync --source test_src --dest test_dest
        shell: pwsh
        if: runner.os == 'Windows'

      - name: Validate file replication (Windows)
        run: |
          if (!(Test-Path "test_dest\testfile.txt")) {
            Write-Error "File not copied!"
            exit 1
          }
        shell: pwsh
        if: runner.os == 'Windows'

      - name: Run `frep watch` (Windows)
        run: |
          Start-Process -NoNewWindow -FilePath "powershell" -ArgumentList "frep watch --source test_src --dest test_dest --interval 1"
          Start-Sleep -s 5
          Stop-Process -Name "frep" -Force
        shell: pwsh
        if: runner.os == 'Windows'
